# GrimAC main configuration
# Source code: https://github.com/MWHunter/Grim
# Copyright DefineOutside, Licensed under GPLv3

prefix: '&bGrimAC &fÂ»'

alerts:
  # Valid placeholders:
  # %prefix%
  # %player%
  # %check_name%
  # %vl% - violations
  # %check-verbose% - extra information from the check such as offsets, not all checks will add information
  format: "%prefix% &f%player% &bfailed &f%check_name% &f(x&c%vl%&f) %verbose%"

# GrimAC can usually check movement within 0.00000001 precision
# It is usually safe to check movement to 0.0001 with very few falses
Prediction:
  # There isn't much point checking this small of precision to catch 0.1% speed increases,
  # but it would be a waste of a prediction engine to not check this far
  Small:
    # How large of an offset from the player's movement should we create a violation for?
    # Measured in blocks (not squared) from the possible movement
    threshold: 0.0001
    # Setback vl: How many times should the player have to go over this threshold to set them back?
    # Set to -1 to disable setbacks
    setbackvl: 40
    # Decay: How many violations should be reduced from the player for being below this threshold
    decay: 0.125
    # Alert vl: How many violations does the player need before they trigger alerts?
    # Set to -1 to disable alerts
    dont-alert-until: 20
    # Alert interval: Instead of sending 10 alerts for 10 flags, we send 1 alert every 10 flags
    alert-interval: 10
  # The vast majority of cheats flag in this offset range, 0.01-0.6
  Medium:
    threshold: 0.01
    setbackvl: 15
    decay: 0.05
    dont-alert-until: 10
    alert-interval: 10
  # This is to stop players from launching themselves extremely far in one tick
  Large:
    threshold: 0.6
    setbackvl: 1
    decay: 0.001
    dont-alert-until: 3
    alert-interval: 1

# Vehicles are client sided in 1.9+, and server sided in 1.8 and below. This section only applies to 1.9+ servers
# Vehicles are less stable than regular predictions as netcode for vehicles is significantly flawed
Vehicle:
  Small:
    threshold: 0.005
    setbackvl: 40
    decay: 0.125
    dont-alert-until: 40
    alert-interval: 30
  Medium:
    threshold: 0.05
    setbackvl: 20
    decay: 0.05
    dont-alert-until: 30
    alert-interval: 20
  Large:
    threshold: 1
    setbackvl: 1
    decay: 0.001
    dont-alert-until: 5
    alert-interval: 10


# Prediction-based ground spoof check
# Extremely stable
GroundSpoof:
  setbackvl: 10
  decay: 0.01
  alertvl: 5
  alert-interval: 1

# Real time NoFall check that is unstable
# It works fine 99% of the time but everything this catches will be caught by the extremely stable
# prediction based check.  It exists to enforce fall damage for the player

Knockback:
  # How much of an offset is "cheating"
  # By default this is 1e-5, which is safe and sane
  # Measured in blocks (not squared) from the possible movement
  threshold: 0.00001
  setbackvl: 10
  decay: 0.025
  alertvl: 5
  alert-interval: 1

Explosion:
  threshold: 0.00001
  setbackvl: 10
  decay: 0.025
  alertvl: 5
  alert-interval: 1

TimerA:
  # Target 1.005 timer
  decay: 0.005
  setbackvl: 10
  alertvl: 5
  alert-interval: 5
# Same check method as TimerA, but for vehicles
TimerVehicle:
  # Target 1.005 timer
  decay: 0.005
  setbackvl: 10
  alertvl: 5
  alert-interval: 5

Reach:
  # How much should we expand hitboxes by? 0.0005 should detect 3.0005+ reach
  #
  # There is 0.03 forced expansion with some client versions, or some client/server combinations due to
  # slight protocol differences or protocol limitations.  I am working on fixing this.
  threshold: 0.0005
  # Should we cancel hits that we know are impossible?
  # 3.00-3.03 hits may go through but still be flagged, due to packet order limitations
  block-impossible-hits: true